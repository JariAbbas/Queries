CREATE TABLE testing 
(
	id int PRIMARY KEY NOT NULL,
	name varchar(255)
)

DELETE FROM BAHL.USERS
WHERE USERID='user123';
DELETE FROM BAHL.USERS
WHERE USERID='user456';

DELETE FROM BAHL.BRANCH
WHERE BRANCHCODE=1;
DELETE FROM BAHL.BRANCH
WHERE BRANCHCODE=2;
DELETE FROM BAHL.BRANCH
WHERE BRANCHCODE=3;
DELETE FROM BAHL.BRANCH
WHERE BRANCHCODE=4;





-- Create Branch table
CREATE TABLE branches (
    branchCode INT PRIMARY KEY NOT NULL,
    branchName VARCHAR(50),
    location VARCHAR(50),
    city VARCHAR(50)
);

-- Create User table
CREATE TABLE users (
    userId VARCHAR(50) PRIMARY KEY NOT NULL,
    password VARCHAR(50),
    status VARCHAR(1),
    branchCode INT,
    userIPAddress VARCHAR(50),
    lastSignOnDate TIMESTAMP,
    userRole VARCHAR(50),
    module VARCHAR(50),
    FOREIGN KEY (branchCode) REFERENCES branches(branchCode)
);

-- Create Activity table
CREATE TABLE activities (
    activityId INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY NOT NULL,
    userId VARCHAR(50),
    activity VARCHAR(50),
    FOREIGN KEY (userId) REFERENCES users(userId)
);










INSERT INTO branches (branchCode, branchName, location, city)
VALUES
  (1001, 'Karachi Main', 'I. I. Chundrigar', 'Karachi'),
  (1002, 'Center Ponit', 'Qayuumabad', 'Karachi'),
  (3001, 'Jinnah Super', 'Blue Area', 'Islamabad'),
  (4001, 'Liberty Branch', 'Noor Jahan Rd', 'Lahore'),
  (5001, 'Bosan Street', 'Multan Road', 'Multan');

INSERT INTO users (userId, password, status, branchCode, userIPAddress, lastSignOnDate, userRole, MODULE) VALUES
('TellerUsr', 'pass123', 'I', 1001, '10.51.41.23', CURRENT_TIMESTAMP, 'User', NULL),
('Creditusr', 'secure456', 'A', 1002, '10.51.41.24', CURRENT_TIMESTAMP, 'User', 'Credit Management'),
('TradeUsr', 'trade789', 'I', 3001, '10.51.41.25', CURRENT_TIMESTAMP, 'Trader', NULL),
('CRMUsr', 'crm1011', 'I', 4001, 'Get from System', CURRENT_TIMESTAMP, 'CRM', NULL),
('TDRUsr', 'tdr1213', 'I', 5001, '10.51.41.26', CURRENT_TIMESTAMP, 'TDR', NULL),
('TellerAuth', 'tellerAuth1415', 'I', 1001, '10.51.41.27', CURRENT_TIMESTAMP, 'TellerAuth', NULL),
('CreditAuth', 'creditAuth1617', 'A', 1002, '10.51.41.28', CURRENT_TIMESTAMP, 'CreditAuth', 'Credit Management'),
('TradeAuth', 'tradeAuth1819', 'I', 3001, '10.51.41.29', CURRENT_TIMESTAMP, 'TradeAuth', NULL),
('CRMAuth', 'crmAuth2021', 'I', 4001, '10.51.41.30', CURRENT_TIMESTAMP, 'CRMAuth', NULL),
('TDRAuth', 'tdrAuth2223', 'I', 5001, '10.51.41.31', CURRENT_TIMESTAMP, 'TDRAuth', NULL);



INSERT INTO activities (userId, activity) VALUES
('Creditusr', 'ASGLIM'),
('Creditusr', 'BOOK'),
('Creditusr', 'MODIFY'),
('Creditusr', 'CANCEL'),
('Creditusr', 'INQUIRE'),
('Creditusr', 'RECOVERY'),
('Creditusr', 'REPORT'),
('CreditAuth', 'BOOKAUTH'),
('CreditAuth', 'MODIFYAUTH'),
('CreditAuth', 'CANCELAUTH'),
('CreditAuth', 'INQUIREAUTH'),
('CreditAuth', 'RECOVERYAUTH'),
('CreditAuth', 'REPORT');

DROP TABLE UserDates;
DROP TABLE ACTIVITIES;
DROP TABLE BRANCHES;
DROP TABLE USERS;


CREATE TABLE UserDates  (
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    userId VARCHAR(50),
    branchCode INT,
    branchName VARCHAR(100),
    currentDate TIMESTAMP NOT NULL,
    previousDate TIMESTAMP NULL, -- âœ… NULL allowed now
    FOREIGN KEY (userId) REFERENCES users(userId) ON DELETE CASCADE
);


ALTER TABLE UserDates
ADD COLUMN previousDate TIMESTAMP;


CREATE TABLE CustomerInfo (
    CustomerID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,  -- Auto-increment ID
    CustomerNumber VARCHAR(20) UNIQUE NOT NULL,  -- User-facing unique ID
    BranchCode INT NOT NULL,
    Category CHAR(1) CHECK (Category IN ('G', 'C'))
);

DROP TABLE CustomerInfo;

CREATE TABLE CurrencyTable (
    CurrencyCode int PRIMARY KEY NOT null,
    CurrencyName VARCHAR(50) NOT NULL,
    CurrencyRate Decimal(15,2) NOT NULL
);

CREATE TABLE AccountTable (
    AccountId INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    CustomerNumber VARCHAR(20) NOT NULL,
    BranchCode INT NOT NULL,
    AccountTitle VARCHAR(100) NOT NULL,
    CurrencyCode int NOT NULL,
    Balance DECIMAL(15,2) DEFAULT 0.00,  -- Loan balance (amount given or due)
    FOREIGN KEY (CustomerNumber) REFERENCES CustomerInfo(CustomerNumber) ON DELETE CASCADE,
    FOREIGN KEY (BranchCode) REFERENCES branches(BranchCode) ON DELETE CASCADE,
    FOREIGN KEY (CurrencyCode) REFERENCES CurrencyTable(CurrencyCode) ON DELETE CASCADE
);

DROP TABLE LOANLIMITS  ;

-- Currency Data
INSERT INTO CurrencyTable (CurrencyCode, CurrencyName, CurrencyRate) VALUES 
(586, 'PKR', 1),
(840, 'USB', 280.25);

UPDATE DB2ADMIN.CURRENCYTABLE
SET CURRENCYNAME='USD', CURRENCYRATE=280.25
WHERE CURRENCYCODE=840;

DELETE FROM DB2ADMIN.CURRENCYTABLE
WHERE CURRENCYCODE='PKR';


-- Customers Data (Using branchCode from your previous data)
INSERT INTO CustomerInfo (CustomerNumber, BranchCode, Category) VALUES 
('0081123456011', 1001, 'C'),
('0081123457011', 1001, 'C'),
('I23001010011', 1002, 'G'),
('A01001011000', 1001, 'G');

-- Accounts Data
INSERT INTO AccountTable (CustomerNumber, BranchCode, AccountTitle, CurrencyCode, Balance) VALUES 
('0081123456011', 1001, 'ABC Company', 586, 0.00),
('0081123457011', 1001, 'XYZ Company', 586, 0.00),
('I23001010011', 1002, 'Income', 840, 0.00),
('A01001011000', 1001, 'Financing', 840, 0.00);



CREATE TABLE LoanLimits (
    CustomerNumber VARCHAR(20) PRIMARY KEY NOT NULL,
    LoanLimit DECIMAL(15, 2),
    LimitBalance DECIMAL(15, 2),
    CreatedBy VARCHAR(50),
    CreatedOn TIMESTAMP,
    UpdatedBy VARCHAR(50),
    UpdatedOn TIMESTAMP,
    FOREIGN KEY (CustomerNumber) REFERENCES CustomerInfo(CustomerNumber),
    FOREIGN KEY (CreatedBy) REFERENCES users(userId) ON DELETE SET NULL,
    FOREIGN KEY (UpdatedBy) REFERENCES users(userId) ON DELETE SET NULL
);


DELETE FROM DB2ADMIN.LOANLIMITS
WHERE CUSTOMERNUMBER='0081123457011';
DELETE FROM DB2ADMIN.LOANLIMITS
WHERE CUSTOMERNUMBER='0081123456011';

